// Generated from SnappyJava.g4 by ANTLR 4.2
package se.ludrik.snappyj.antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class SnappyJavaLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__3=1, T__2=2, T__1=3, T__0=4, BOOLEAN=5, STRING=6, INT=7, IF=8, ELSE=9, 
		WHILE=10, RETURN=11, CLASS=12, VOID=13, STATIC=14, PUBLIC=15, SOUT=16, 
		THIS=17, NEW=18, LENGTH=19, TRUE=20, FALSE=21, LPAREN=22, RPAREN=23, LBRACK=24, 
		RBRACK=25, LBRACE=26, RBRACE=27, ENDL=28, COMMA=29, AND=30, LT=31, LTE=32, 
		GT=33, GTE=34, ADD=35, SUB=36, MUL=37, ID=38, NUM=39, WS=40, COMMENT=41, 
		LINE_COMMENT=42;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'.'", "'='", "'main'", "'!'", "'boolean'", "'String'", "'int'", "'if'", 
		"'else'", "'while'", "'return'", "'class'", "'void'", "'static'", "'public'", 
		"'System.out.println'", "'this'", "'new'", "'length'", "'true'", "'false'", 
		"'('", "')'", "'['", "']'", "'{'", "'}'", "';'", "','", "'&&'", "'<'", 
		"'<='", "'>'", "'>='", "'+'", "'-'", "'*'", "ID", "NUM", "WS", "COMMENT", 
		"LINE_COMMENT"
	};
	public static final String[] ruleNames = {
		"T__3", "T__2", "T__1", "T__0", "BOOLEAN", "STRING", "INT", "IF", "ELSE", 
		"WHILE", "RETURN", "CLASS", "VOID", "STATIC", "PUBLIC", "SOUT", "THIS", 
		"NEW", "LENGTH", "TRUE", "FALSE", "LPAREN", "RPAREN", "LBRACK", "RBRACK", 
		"LBRACE", "RBRACE", "ENDL", "COMMA", "AND", "LT", "LTE", "GT", "GTE", 
		"ADD", "SUB", "MUL", "ID", "NUM", "WS", "COMMENT", "LINE_COMMENT", "LETTER", 
		"DIGIT"
	};


	public SnappyJavaLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "SnappyJava.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2,\u012e\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\6"+
		"\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3"+
		"\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3"+
		"\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\17\3\17"+
		"\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21"+
		"\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21"+
		"\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\24\3\24"+
		"\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26"+
		"\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34"+
		"\3\35\3\35\3\36\3\36\3\37\3\37\3\37\3 \3 \3!\3!\3!\3\"\3\"\3#\3#\3#\3"+
		"$\3$\3%\3%\3&\3&\3\'\3\'\3\'\7\'\u00fc\n\'\f\'\16\'\u00ff\13\'\3(\3(\3"+
		"(\7(\u0104\n(\f(\16(\u0107\13(\5(\u0109\n(\3)\6)\u010c\n)\r)\16)\u010d"+
		"\3)\3)\3*\3*\3*\3*\7*\u0116\n*\f*\16*\u0119\13*\3*\3*\3*\3*\3*\3+\3+\3"+
		"+\3+\7+\u0124\n+\f+\16+\u0127\13+\3+\3+\3,\3,\3-\3-\3\u0117\2.\3\3\5\4"+
		"\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22"+
		"#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C"+
		"#E$G%I&K\'M(O)Q*S+U,W\2Y\2\3\2\b\3\2\62\62\3\2\63;\6\2\13\f\17\17\"\""+
		"))\4\2\f\f\17\17\5\2C\\aac|\3\2\62;\u0132\2\3\3\2\2\2\2\5\3\2\2\2\2\7"+
		"\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2"+
		"\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2"+
		"\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2"+
		"\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2"+
		"\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2"+
		"\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M"+
		"\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\3[\3\2\2\2\5]\3\2"+
		"\2\2\7_\3\2\2\2\td\3\2\2\2\13f\3\2\2\2\rn\3\2\2\2\17u\3\2\2\2\21y\3\2"+
		"\2\2\23|\3\2\2\2\25\u0081\3\2\2\2\27\u0087\3\2\2\2\31\u008e\3\2\2\2\33"+
		"\u0094\3\2\2\2\35\u0099\3\2\2\2\37\u00a0\3\2\2\2!\u00a7\3\2\2\2#\u00ba"+
		"\3\2\2\2%\u00bf\3\2\2\2\'\u00c3\3\2\2\2)\u00ca\3\2\2\2+\u00cf\3\2\2\2"+
		"-\u00d5\3\2\2\2/\u00d7\3\2\2\2\61\u00d9\3\2\2\2\63\u00db\3\2\2\2\65\u00dd"+
		"\3\2\2\2\67\u00df\3\2\2\29\u00e1\3\2\2\2;\u00e3\3\2\2\2=\u00e5\3\2\2\2"+
		"?\u00e8\3\2\2\2A\u00ea\3\2\2\2C\u00ed\3\2\2\2E\u00ef\3\2\2\2G\u00f2\3"+
		"\2\2\2I\u00f4\3\2\2\2K\u00f6\3\2\2\2M\u00f8\3\2\2\2O\u0108\3\2\2\2Q\u010b"+
		"\3\2\2\2S\u0111\3\2\2\2U\u011f\3\2\2\2W\u012a\3\2\2\2Y\u012c\3\2\2\2["+
		"\\\7\60\2\2\\\4\3\2\2\2]^\7?\2\2^\6\3\2\2\2_`\7o\2\2`a\7c\2\2ab\7k\2\2"+
		"bc\7p\2\2c\b\3\2\2\2de\7#\2\2e\n\3\2\2\2fg\7d\2\2gh\7q\2\2hi\7q\2\2ij"+
		"\7n\2\2jk\7g\2\2kl\7c\2\2lm\7p\2\2m\f\3\2\2\2no\7U\2\2op\7v\2\2pq\7t\2"+
		"\2qr\7k\2\2rs\7p\2\2st\7i\2\2t\16\3\2\2\2uv\7k\2\2vw\7p\2\2wx\7v\2\2x"+
		"\20\3\2\2\2yz\7k\2\2z{\7h\2\2{\22\3\2\2\2|}\7g\2\2}~\7n\2\2~\177\7u\2"+
		"\2\177\u0080\7g\2\2\u0080\24\3\2\2\2\u0081\u0082\7y\2\2\u0082\u0083\7"+
		"j\2\2\u0083\u0084\7k\2\2\u0084\u0085\7n\2\2\u0085\u0086\7g\2\2\u0086\26"+
		"\3\2\2\2\u0087\u0088\7t\2\2\u0088\u0089\7g\2\2\u0089\u008a\7v\2\2\u008a"+
		"\u008b\7w\2\2\u008b\u008c\7t\2\2\u008c\u008d\7p\2\2\u008d\30\3\2\2\2\u008e"+
		"\u008f\7e\2\2\u008f\u0090\7n\2\2\u0090\u0091\7c\2\2\u0091\u0092\7u\2\2"+
		"\u0092\u0093\7u\2\2\u0093\32\3\2\2\2\u0094\u0095\7x\2\2\u0095\u0096\7"+
		"q\2\2\u0096\u0097\7k\2\2\u0097\u0098\7f\2\2\u0098\34\3\2\2\2\u0099\u009a"+
		"\7u\2\2\u009a\u009b\7v\2\2\u009b\u009c\7c\2\2\u009c\u009d\7v\2\2\u009d"+
		"\u009e\7k\2\2\u009e\u009f\7e\2\2\u009f\36\3\2\2\2\u00a0\u00a1\7r\2\2\u00a1"+
		"\u00a2\7w\2\2\u00a2\u00a3\7d\2\2\u00a3\u00a4\7n\2\2\u00a4\u00a5\7k\2\2"+
		"\u00a5\u00a6\7e\2\2\u00a6 \3\2\2\2\u00a7\u00a8\7U\2\2\u00a8\u00a9\7{\2"+
		"\2\u00a9\u00aa\7u\2\2\u00aa\u00ab\7v\2\2\u00ab\u00ac\7g\2\2\u00ac\u00ad"+
		"\7o\2\2\u00ad\u00ae\7\60\2\2\u00ae\u00af\7q\2\2\u00af\u00b0\7w\2\2\u00b0"+
		"\u00b1\7v\2\2\u00b1\u00b2\7\60\2\2\u00b2\u00b3\7r\2\2\u00b3\u00b4\7t\2"+
		"\2\u00b4\u00b5\7k\2\2\u00b5\u00b6\7p\2\2\u00b6\u00b7\7v\2\2\u00b7\u00b8"+
		"\7n\2\2\u00b8\u00b9\7p\2\2\u00b9\"\3\2\2\2\u00ba\u00bb\7v\2\2\u00bb\u00bc"+
		"\7j\2\2\u00bc\u00bd\7k\2\2\u00bd\u00be\7u\2\2\u00be$\3\2\2\2\u00bf\u00c0"+
		"\7p\2\2\u00c0\u00c1\7g\2\2\u00c1\u00c2\7y\2\2\u00c2&\3\2\2\2\u00c3\u00c4"+
		"\7n\2\2\u00c4\u00c5\7g\2\2\u00c5\u00c6\7p\2\2\u00c6\u00c7\7i\2\2\u00c7"+
		"\u00c8\7v\2\2\u00c8\u00c9\7j\2\2\u00c9(\3\2\2\2\u00ca\u00cb\7v\2\2\u00cb"+
		"\u00cc\7t\2\2\u00cc\u00cd\7w\2\2\u00cd\u00ce\7g\2\2\u00ce*\3\2\2\2\u00cf"+
		"\u00d0\7h\2\2\u00d0\u00d1\7c\2\2\u00d1\u00d2\7n\2\2\u00d2\u00d3\7u\2\2"+
		"\u00d3\u00d4\7g\2\2\u00d4,\3\2\2\2\u00d5\u00d6\7*\2\2\u00d6.\3\2\2\2\u00d7"+
		"\u00d8\7+\2\2\u00d8\60\3\2\2\2\u00d9\u00da\7]\2\2\u00da\62\3\2\2\2\u00db"+
		"\u00dc\7_\2\2\u00dc\64\3\2\2\2\u00dd\u00de\7}\2\2\u00de\66\3\2\2\2\u00df"+
		"\u00e0\7\177\2\2\u00e08\3\2\2\2\u00e1\u00e2\7=\2\2\u00e2:\3\2\2\2\u00e3"+
		"\u00e4\7.\2\2\u00e4<\3\2\2\2\u00e5\u00e6\7(\2\2\u00e6\u00e7\7(\2\2\u00e7"+
		">\3\2\2\2\u00e8\u00e9\7>\2\2\u00e9@\3\2\2\2\u00ea\u00eb\7>\2\2\u00eb\u00ec"+
		"\7?\2\2\u00ecB\3\2\2\2\u00ed\u00ee\7@\2\2\u00eeD\3\2\2\2\u00ef\u00f0\7"+
		"@\2\2\u00f0\u00f1\7?\2\2\u00f1F\3\2\2\2\u00f2\u00f3\7-\2\2\u00f3H\3\2"+
		"\2\2\u00f4\u00f5\7/\2\2\u00f5J\3\2\2\2\u00f6\u00f7\7,\2\2\u00f7L\3\2\2"+
		"\2\u00f8\u00fd\5W,\2\u00f9\u00fc\5W,\2\u00fa\u00fc\5Y-\2\u00fb\u00f9\3"+
		"\2\2\2\u00fb\u00fa\3\2\2\2\u00fc\u00ff\3\2\2\2\u00fd\u00fb\3\2\2\2\u00fd"+
		"\u00fe\3\2\2\2\u00feN\3\2\2\2\u00ff\u00fd\3\2\2\2\u0100\u0109\t\2\2\2"+
		"\u0101\u0105\t\3\2\2\u0102\u0104\5Y-\2\u0103\u0102\3\2\2\2\u0104\u0107"+
		"\3\2\2\2\u0105\u0103\3\2\2\2\u0105\u0106\3\2\2\2\u0106\u0109\3\2\2\2\u0107"+
		"\u0105\3\2\2\2\u0108\u0100\3\2\2\2\u0108\u0101\3\2\2\2\u0109P\3\2\2\2"+
		"\u010a\u010c\t\4\2\2\u010b\u010a\3\2\2\2\u010c\u010d\3\2\2\2\u010d\u010b"+
		"\3\2\2\2\u010d\u010e\3\2\2\2\u010e\u010f\3\2\2\2\u010f\u0110\b)\2\2\u0110"+
		"R\3\2\2\2\u0111\u0112\7\61\2\2\u0112\u0113\7,\2\2\u0113\u0117\3\2\2\2"+
		"\u0114\u0116\13\2\2\2\u0115\u0114\3\2\2\2\u0116\u0119\3\2\2\2\u0117\u0118"+
		"\3\2\2\2\u0117\u0115\3\2\2\2\u0118\u011a\3\2\2\2\u0119\u0117\3\2\2\2\u011a"+
		"\u011b\7,\2\2\u011b\u011c\7\61\2\2\u011c\u011d\3\2\2\2\u011d\u011e\b*"+
		"\2\2\u011eT\3\2\2\2\u011f\u0120\7\61\2\2\u0120\u0121\7\61\2\2\u0121\u0125"+
		"\3\2\2\2\u0122\u0124\n\5\2\2\u0123\u0122\3\2\2\2\u0124\u0127\3\2\2\2\u0125"+
		"\u0123\3\2\2\2\u0125\u0126\3\2\2\2\u0126\u0128\3\2\2\2\u0127\u0125\3\2"+
		"\2\2\u0128\u0129\b+\2\2\u0129V\3\2\2\2\u012a\u012b\t\6\2\2\u012bX\3\2"+
		"\2\2\u012c\u012d\t\7\2\2\u012dZ\3\2\2\2\n\2\u00fb\u00fd\u0105\u0108\u010d"+
		"\u0117\u0125\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}