#!/bin/bash

###### COLORS
txtblk="\033[0;30m" # Black - Regular
txtred="\033[0;31m" # Red
txtgrn="\033[0;32m" # Green
txtylw="\033[0;33m" # Yellow
txtblu="\033[0;34m" # Blue
txtpur="\033[0;35m" # Purple
txtcyn="\033[0;36m" # Cyan
txtwht="\033[0;37m" # White
bldblk="\033[1;30m" # Black - Bold
bldred="\033[1;31m" # Red
bldgrn="\033[1;32m" # Green
bldylw="\033[1;33m" # Yellow
bldblu="\033[1;34m" # Blue
bldpur="\033[1;35m" # Purple
bldcyn="\033[1;36m" # Cyan
bldwht="\033[1;37m" # White
undblk="\033[4;30m" # Black - Underline
undred="\033[4;31m" # Red
undgrn="\033[4;32m" # Green
undylw="\033[4;33m" # Yellow
undblu="\033[4;34m" # Blue
undpur="\033[4;35m" # Purple
undcyn="\033[4;36m" # Cyan
undwht="\033[4;37m" # White
bakblk="\033[40m"   # Black - Background
bakred="\033[41m"   # Red
bakgrn="\033[42m"   # Green
bakylw="\033[43m"   # Yellow
bakblu="\033[44m"   # Blue
bakpur="\033[45m"   # Purple
bakcyn="\033[46m"   # Cyan
bakwht="\033[47m"   # White
txtrst="\033[0m"    # Text Reset
##### END COLORS

if [ -z $1 ]
then
  echo "No arguments supplied."
  echo "usage: ./run [<filename> | <tests>] [-o <output directory>]"
  echo -e "\t$bldwht""filename""$txtrst"" - name of .java file to compile."
  echo -e "\t$bldwht""tests""$txtrst"" - compiles and tests all files in testcases directory."
  echo -e "\t$bldwht""-o""$txtrst"" - specifies output directory."
  exit 2
fi

output_dir="output"
if [ "$#" -gt 2 ]; then
  echo "in here"
  if [ "$2" == "-o" -a -n $3 ]; then
    echo "here tii"
    output_dir="$3"  
  fi
fi
  


build="ant"
minicompile="java -cp mjc.jar:lib/antlr-4.2-complete.jar mjc.JVMMain"

## store first param
filename="$1"

## lose first param
# shift

# rest of parameters
# flags="$* -S"

## Filename to dir
function mkdirname() {
  echo "$1" | sed 's/\.java//g' | tr '[A-Z]' '[a-z]'
}

## Compile and make output dirs
function compile() {
  _file=$1
  # shift
  # _flags=$*
  _dirname=$(mkdirname $_file)
  mkdir -p "$output_dir/$_dirname"
  $minicompile $_file -o "$output_dir/$_dirname" "-S" #"$_flags"
  # return $?
}

if [ $filename == "tests" ]; then
  
  compile_files=testcases/compile/*.java
  noncompile_files=testcases/noncompile/*.java
  execute_files=testcases/execute/*.java
  nonexecute_files=testcases/nonexecute/*.java

  ## Testing files that should compile
  echo -e "\n--------------------------------"
  echo -e "Compiling compilable test cases."
  echo -e "--------------------------------\n"
  for f in $compile_files; do
    echo -ne "Compiling $f "
    compile $f $flags >/dev/null 2>&1
    result=$?
    if [ $result -eq 0 ]; then
      echo -e "$bldgrn OK $txtrst"
    else
      echo -e "$bldred ERROR $txtrst"
      #echo "Exit status: $status"
    fi
  done

  ## Testing files that should fail to compile
  echo -e "\n------------------------------------"
  echo -e "Compiling non-compilable test cases.\n"
  echo -e "------------------------------------\n"
  for f in $noncompile_files; do
    echo -ne "Compiling $f "
    compile $f $flags >/dev/null 2>&1
    result=$?
    if [ $result -eq 1 ]; then
      echo -e "$bldgrn OK $txtrst"
    else
      echo -e "$bldred ERROR $txtrst"
      #echo "Exit status: $status"
    fi
  done


else
  if [ -f $filename ]; then
    compile $filename #$flags
  else
    echo "Error: $filename is not a valid file."
  fi
fi


# find testcases -type f -print0 | while read -d $'\0' file; do
#   fileType=$(basename $(dirname $file))
#     echo "Filetype $fileType"
# done

